image: repository.dimas-maryanto.com:8086/node:14-alpine3.11

stages:
  - build
  - publish

variables:
    APP_NAME: "angular-dockerize"
    PRIVATE_REGISTRY_PUSH: "repository.dimas-maryanto.com:8087"
    PRIVATE_REGISTRY_PULL: "repository.dimas-maryanto.com:8086"
    IMAGE_NAME: ${PRIVATE_REGISTRY_PUSH}/${APP_NAME}:$CI_COMMIT_TAG

cache:
    paths:
        - node_modules/

build:   
    stage: build 
    before_script:
        - npm install
    script:
        - node ./node_modules/@angular/cli/bin/ng build  --prod  --aot --build-optimizer --extract-css --extract-licenses --vendor-chunk=true
    tags:
        - docker
    only:
        - /-release$/
    artifacts:
        paths:
            - dist/
        name: $CI_PROJECT_NAME-$CI_COMMIT_TAG

publish-image:
    stage: publish 
    image: ${PRIVATE_REGISTRY_PULL}/docker:stable
    services:
        - name: ${PRIVATE_REGISTRY_PULL}/docker:18.09-dind
          # Enabled insecure registry into docker inside docker
          entrypoint: ["dockerd-entrypoint.sh"]
          # TODO variable `--insecure-registry` cant be inject as variable
          command: [
            "--insecure-registry=repository.dimas-maryanto.com:8087",
            "--insecure-registry=repository.dimas-maryanto.com:8086"
          ]
          alias: dockerd
    variables:
        # modified file /etc/hosts inside docker container
        DOCKER_HOST: tcp://dockerd:2375
        DOCKER_DRIVER: overlay2
    before_script: 
        - docker login --username ${REGISTERY_USERNAME} --password ${REGISTERY_PASSWORD} ${PRIVATE_REGISTRY_PUSH} 
        - docker login --username ${REGISTERY_USERNAME} --password ${REGISTERY_PASSWORD} ${PRIVATE_REGISTRY_PULL}
    script:
        - docker build -t ${IMAGE_NAME} -f Dockerfile --build-arg APP_NAME=${APP_NAME} .
    after_script:
        - docker image push ${IMAGE_NAME}
    tags:
        - docker
    only:
        - /-release$/

